# Before issuing `kubectl apply` command,
# modify the value contains "<" and ">" to correct value

# namespace-deploy.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: <NAMESPACE_NAME>

---
# cert-secrets.yaml
# If you using cert-manager to manage the certificates, you can comment out this yaml content
apiVersion: v1
kind: Secret
metadata:
  name: cert-secrets
  namespace: <NAMESPACE_NAME>
type: tls
data:
  tls.crt: |-
    <TLS_CERT_WITH_B64_ENCODED>
  tls.key: |-
    <TLS_KEY_WITH_B64_ENCODED>

---
# auth-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: auth-secrets
  namespace: <NAMESPACE_NAME>
type: generic
data:
  htpasswd: >-
    <HTPASSWD_CONTENT_WITH_B64_ENCODED>

---
# persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: podman-registry-pv
spec:
  capacity:
    storage: <SIZE_OF_PV>
  hostPath:
    path: /var/lib/registry
  accessModes:
    - ReadWriteOnce

---
# persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: podman-registry-pvc
  namespace: <NAMESPACE_NAME>
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      # This value must less then or equal to persistent volumes total size
      storage: <SIZE_OF_PVC>

---
# config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: podman-registry-configs
  namespace: <NAMESPACE_NAME>
data:
  auth.htpasswd_realm: basic_realm
  auth.htpasswd_path: "/var/lib/registry/auth/htpasswd"
  http.tls_certificate: "/var/lib/registry/certs/tls.crt"
  http.tls_key: "/var/lib/registry/certs/tls.key"
  http.debug_addr: ":5001"
  http.debug_prometheus_enabled: "true"
  http.debug_prometheus_path: "/metrics"

---
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <REGISTRY_APP_NAME>
  namespace: <NAMESPACE_NAME>
  labels:
    app_name: <REGISTRY_APP_NAME>
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app_name: <REGISTRY_APP_NAME>
  template:
    metadata:
      labels:
        app_name: <REGISTRY_APP_NAME>
    spec:
      volumes:
        - name: repository-volume
          persistentVolumeClaim:
            claimName: podman-registry-pvc
        - name: certificates-volume
          secret:
            secretName: cert-secrets
            items:
              - key: tls.crt
                path: ./tls.crt
              - key: tls.key
                path: ./tls.key
        - name: authorization-volume
          secret:
            secretName: auth-secrets
      containers:
        - name: <REGISTRY_APP_NAME>
          image: docker.io/registry:latest
          ports:
            - name: registry-port
              containerPort: 5000
              protocol: TCP
            - name: shr-metrics
              containerPort: 5001
              protocol: TCP
          env:
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: http.tls_certificate
            - name: REGISTRY_HTTP_TLS_KEY
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: http.tls_key
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: auth.htpasswd_realm
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: auth.htpasswd_path
            - name: REGISTRY_HTTP_DEBUG_ADDR
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: http.debug_addr
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: http.debug_prometheus_enabled
            - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_PATH
              valueFrom:
                configMapKeyRef:
                  name: podman-registry-configs
                  key: http.debug_prometheus_path
          livenessProbe:
            httpGet:
              path: /metrics
              port: shr-metrics
            failureThreshold: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /metrics
              port: shr-metrics
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: repository-volume
              mountPath: /var/lib/registry
              subPath: registry
            - name: certificates-volume
              readOnly: true
              mountPath: /var/lib/registry/certs
            - name: authorization-volume
              mountPath: /var/lib/registry/auth
          imagePullPolicy: Always

---
# service.yaml
apiVersion: v1
kind: Service
metadata:
  name: <REGISTRY_APP_NAME>
  namespace: <NAMESPACE_NAME>
spec:
  ports:
    - protocol: TCP
      port: <PROXIED_PORT_NUMBER>
      targetPort: 5000
  selector:
    app_name: <REGISTRY_APP_NAME>
  type: ClusterIP
